name: Build and Test

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types:
      - opened
      - synchronize
  pull_request_target:
    types:
      - opened
      - synchronize

jobs:
  web-test:
    name: Web Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Node
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: npm
      
      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Web App
        run: npm run action gulp build browser

      - name: Test Web App
        run: npm run action src/www/test

  linux-debug-build:
    name: Linux Debug Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: web-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Node
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: npm
      
      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Linux Client
        run: npm run action src/electron/build linux
      
      - name: Upload Linux Client
        uses: actions/upload-artifact@v2
        with:
          name: client_linux_debug
          path: build/dist/Outline-Client.AppImage
          if-no-files-found: error

  windows-debug-build:
    name: Windows Debug Build
    runs-on: windows-2019
    timeout-minutes: 10
    needs: web-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Node
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: npm

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Windows Client
        run: npm run action src/electron/build windows

      - name: Upload Windows Client
        uses: actions/upload-artifact@v2
        with:
          name: client_installer_windows_debug
          path: build/dist/Outline-Client.exe
          if-no-files-found: error

  mac-debug-build:
    name: MacOS Debug Build
    runs-on: macos-11
    timeout-minutes: 10
    environment: Client OSX Debug
    needs: web-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Node
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: npm

      - name: Install NPM Dependencies
        run: npm ci

      - name: Set XCode Version
        run: sudo xcode-select -switch /Applications/Xcode_13.2.app

      - name: Install Apple Development Certificate
        env: 
          CERTIFICATE_PATH: apple/certificates/development.cer
          PROVISIONING_PROFILE_PATH: apple/certificates/mac.provisionprofile
          KEYCHAIN_PATH: temp.keychain
          KEYCHAIN_PASSWORD: temp
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          security add-certificates -k $KEYCHAIN_PATH $CERTIFICATE_PATH 

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PROVISIONING_PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build OSX Client
        run: |
          npm run action apple/build osx
          unzip Outline.app.dSYM.zip

      - name: Upload OSX Client
        uses: actions/upload-artifact@v2
        with:
          name: client_osx_debug
          path: |
            platforms/osx/Outline.app
            platforms/osx/Outline.app.dSYM
          if-no-files-found: error

  ios-debug-build:
    name: iOS Debug Build
    runs-on: macos-11
    timeout-minutes: 10
    environment: Client iOS Debug
    needs: web-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Node
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: npm

      - name: Install NPM Dependencies
        run: npm ci

      - name: Set XCode Version
        run: sudo xcode-select -switch /Applications/Xcode_13.2.app

      - name: Install Apple Development Certificate
        env:
          APPLE_BUILD_CERTIFICATE: ${{ secrets.APPLE_BUILD_CERTIFICATE }}
          APPLE_BUILD_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_APPLE_BUILD_CERTIFICATE_PASSWORD }}
          APPLE_PROVISIONING_PROFILE: ${{ secrets.APPLE_APPLE_PROVISIONING_PROFILE }}
          CI_KEYCHAIN_PASSWORD: ${{ secrets.CI_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PROVISIONING_PROFILE_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$APPLE_BUILD_CERTIFICATE" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$APPLE_PROVISIONING_PROFILE" | base64 --decode --output $PROVISIONING_PROFILE_PATH

          # create temporary keychain
          security create-keychain -p "$CI_KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$CI_KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$APPLE_BUILD_CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PROVISIONING_PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build iOS Client
        run: |
          npm run action apple/build ios
          unzip Outline.app.dSYM.zip

      - name: Upload iOS Client
        uses: actions/upload-artifact@v2
        with:
          name: client_ios_debug
          path: |
            platforms/ios/Outline.ipa
            platforms/ios/Outline.app.dSYM
          if-no-files-found: error

  android-debug-build:
    name: Android Debug Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: web-test
    env:
      ANDROID_SDK_ROOT: /opt/android-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Node
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16
          cache: npm

      - name: Install NPM Dependencies
        run: npm ci

      - name: Install Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Setup Android
        run: bash ./tools/build/setup_linux_android.sh

      - name: Build Android Client
        run: npm run action gulp build android

      - name: Upload Android Client
        uses: actions/upload-artifact@v2
        with:
          name: client_android_debug
          path: platforms/android/app/build/outputs/apk
          if-no-files-found: error
